package ${current.owningPackage.name};

#foreach ($aDependency in $current.dependencies)
import ${aDependency.owningPackage.name}.${dialect.mt2lt($aDependency)};
#end
import fr.insset.jeanluc.util.factory.FactoryMethods;

import java.util.List;
import java.util.Map;
import java.util.Set;
import java.util.stream.Stream;
import javax.annotation.Generated;



@Generated("ETE core/src/main/mde/spec/class2interface.vm")
public interface ${prefix}${current.name} #if (
            $current.hasSuperClasses()) extends #foreach ($aSuperClass in $current.superClass)#if ($velocityCount>1),#end ${dialect.mt2lt($aSuperClass)}#end #end {


#foreach ($aTVDeclaration in $current.tagValues.keySet())
#set ($tagName = $aTVDeclaration.name)
#if ($aTVDeclaration.valueType)
#set ($tagTypeName = $aTVDeclaration.valueType.name)
#else
#set ($tagTypeName="String")
#end
#set ($tagValue = $current.getValueOf($tagName))
    // Tagged value of ${tagName}
    public default $tagTypeName get${dialect.i2uc($tagName)}() {
#if ($tagTypeName == "String")
        return "$tagValue";
#else
        return $tagValue;
#end
    }


#end



#foreach ($aProperty in $current.ownedAttribute)

#if ($aProperty.qualifierType)
    public void set${dialect.i2uc($aProperty.name)}(Map<${dialect.mt2lt($aProperty.qualifierType)}, #parse("type.vm")> inValue);
    public Map<${dialect.mt2lt($aProperty.qualifierType)}, #parse("type.vm")> get${dialect.i2uc($aProperty.name)}();
    public #parse("type.vm") getBy${dialect.i2uc($aProperty.qualifierName)}(${aProperty.qualifierType.name} aKey);
    public #parse("type.vm") setBy${dialect.i2uc($aProperty.qualifierName)}(${aProperty.qualifierType.name} aKey, #parse("type.vm") aValue);
#else
#if ($aProperty.type.collection)
#parse ("accesseurs_mutateurs/sequence.vm")
#else
#parse ("accesseurs_mutateurs/one.vm")
#end## if getValueOf("relation")
#if (${current.getValueOf("relation")})
#parse ("accesseurs_mutateurs/inherited.vm")
#end
#end## qualifierType
#end## foreach

}
