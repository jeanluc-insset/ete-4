
    public void set${dialect.i2uc($aProperty.name)}(${dialect.mt2lt($aProperty.type)} ${aProperty.name}) {
        this.${aProperty.name} = ${aProperty.name};
    }

    public ${dialect.mt2lt($aProperty.type)} get${dialect.i2uc($aProperty.name)}() {
        return ${aProperty.name};
    }

    public boolean add${prefix}${dialect.i2uc($aProperty.name)}(${prefix}${dialect.i2uc($aProperty.type.baseType.name)} anElement) {
        if (${aProperty.name} == null) {
            try {
                ${aProperty.name} = FactoryMethods.newList(${dialect.mt2lt($aProperty.type.baseType)}.class);
            } catch (Exception e) {
                Logger.getGlobal().log(Level.WARNING, "Unable to create a list");
            }
        }
        return ${aProperty.name}.add(anElement);
    }

    public boolean remove${prefix}${dialect.i2uc($aProperty.name)}(${prefix}${dialect.i2uc($aProperty.type.baseType.name)} anElement) {
        return ${aProperty.name}.remove(anElement);
    }

    public Stream<${prefix}${dialect.i2uc($aProperty.type.baseType.name)}> get${prefix}${dialect.i2uc($aProperty.name)}AsStream() {
        return null;
    }

// ${aProperty.qualifierType.name} -- *
// ${aProperty.qualifierName}