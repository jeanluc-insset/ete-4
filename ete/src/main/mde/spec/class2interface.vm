package ${current.owningPackage.name};

#foreach ($aDependency in $current.dependencies)
import ${aDependency.owningPackage.name}.${dialect.mt2lt($aDependency)};
#end

import java.util.List;
import java.util.Set;
import java.util.stream.Stream;
import javax.annotation.Generated;



@Generated("ETE ete/src/main/mde/spec/class2interface.vm")
public interface ${prefix}${current.name} #if (
            $current.hasSuperClasses()) extends #foreach ($aSuperClass in $current.superClass)#if ($velocityCount>1),#end ${dialect.mt2lt($aSuperClass)}#end #end {


#foreach ($aTVDeclaration in $current.tagValues.keySet())
#set ($tagName = $aTVDeclaration.name)
#set ($tagType = $aTVDeclaration.valueType)
#set ($tagValue = $current.getValueOf($tagName))
    public default $tagType.name get${dialect.i2uc($tagName)}() {
#if ($tagType.name == "String")
        return "$tagValue";
#else
        return $tagValue;
#end
    }


#end


#foreach ($aProperty in $current.ownedAttribute)

#if ($aProperty.type.collection)
#parse ("accesseurs_mutateurs/sequence.vm")
#if (${current.getValueOf("relation")})
#parse ("accesseurs_mutateurs/inherited.vm")
#end
#else
#parse ("accesseurs_mutateurs/one.vm")
#if ($current.hasStereotype("inheritance"))
#parse ("accesseurs_mutateurs/inherited.vm")
#end
#end## if getValueOf("relation")
#end## foreach

}
